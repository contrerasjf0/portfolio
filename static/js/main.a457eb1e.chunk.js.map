{"version":3,"sources":["logo.svg","boot/firebase.js","config/firebase.js","components/Nav.js","components/NoteCard.js","dataSet/notes.js","views/NotesList.js","views/NewNotes.js","views/EditNote.js","views/Login.js","components/PrivateRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","Header","Layout","Nav","props","handleClickLogout","bind","this","signOut","then","console","log","window","localStorage","removeItem","history","push","className","theme","mode","Item","key","to","onClick","Component","withRouter","NoteCard","title","description","id","date","onClickEdit","NotesList","handleClickEdit","notesDataSet","map","note","TextArea","Input","NewNotes","placeholder","size","prefix","type","rows","EditNote","state","match","params","uid","noteOject","find","setState","disabled","value","moment","Login","handleClickLogin","signInWithPopup","result","data","user","setItem","JSON","stringify","icon","PrivateRoute","component","rest","render","dataLocalStorage","parse","getItem","Object","keys","length","isLogin","App","exact","path","PrivateRouter","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a457eb1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"," // Your web app's Firebase configuration\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport firebaseConfig from '../config/firebase';\n\n\nconst fire = firebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst auth = firebase.auth();\n\n\nexport default {\n    auth,\n    provider,\n    fire\n};","export default {\n    apiKey: \"AIzaSyCucvWFlptqjkpD2V8a2FYHPphxcZUM2eM\",\n    authDomain: \"demoreactrouter.firebaseapp.com\",\n    databaseURL: \"https://demoreactrouter.firebaseio.com\",\n    projectId: \"demoreactrouter\",\n    storageBucket: \"\",\n    messagingSenderId: \"41273737445\",\n    appId: \"1:41273737445:web:1c11d60223dfe3bf24940c\"\n  };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu, Layout } from 'antd';\n\nimport fire from \"../boot/firebase\";\n\nconst { Header } = Layout;\n\nclass Nav extends Component {\n    static propTypes = {\n        history: PropTypes.object.isRequired,\n    }\n\n    constructor(props){\n        super(props);\n\n        this.fire = fire;\n        this.handleClickLogout = this.handleClickLogout.bind(this);\n    }\n\n    handleClickLogout(){\n        this.fire.auth.signOut().then(() => {\n            console.log('holi');\n            window.localStorage.removeItem(\"labNotes\");\n            this.props.history.push('/');\n        });\n    }\n\n    render() {\n        return (\n            <Header className=\"nav__wrapper\">\n                <div className=\"brandLogo\" >\n                 LapNotes\n                </div>\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    className=\"nav__component-menu\"\n                >\n                    <Menu.Item key=\"notes\">\n                        <Link to=\"/notes\"> Notes </Link> \n                    </Menu.Item>\n                    <Menu.Item key=\"newNotes\">\n                        <Link to=\"/newNote\"> New Note </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"logout\" className=\"btnLogout\" onClick={this.handleClickLogout}>\n                        Logout\n                    </Menu.Item>\n                </Menu>\n            </Header>\n        )\n    }\n}\n\nexport default withRouter(Nav);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Icon } from 'antd';\n\nconst  propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    onClickEdit: PropTypes.func,\n};\n\n\nfunction NoteCard (props) {\n    let {title, description, id, date, onClickEdit} = props;\n    return (\n        <Card\n        title={title}\n        className=\"noteCard__component-Card\">\n            <p>{date}</p>\n            <p onClick={() => onClickEdit(id) }>{description}</p>\n        </Card>\n    );\n}\n\nNoteCard.propTypes = propTypes;\n\nexport default NoteCard;\n","export default [\n    {\n        id: \"1\",\n        title: \"Note 1\",\n        description: \"This's a Note 1\",\n        date: \"2015/01/01\"\n    },\n    {\n        id: \"2\",\n        title: \"Note 2\",\n        description: \"This's a Note 2\",\n        date: \"2015/02/01\"\n    },\n    {\n        id: \"3\",\n        title: \"Note 3\",\n        description: \"This's a Note 3\",\n        date: \"2015/03/01\"\n    },\n    {\n        id: \"4\",\n        title: \"Note 4\",\n        description: \"This's a Note 4\",\n        date: \"2015/04/01\"\n    }\n]","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport NotesCard from '../components/NoteCard';\nimport notesDataSet from '../dataSet/notes';\n\nexport default class NotesList extends Component {\n    static propTypes = {\n        prop: PropTypes\n    }\n\n    constructor(props){\n        super(props);\n\n        this.handleClickEdit = this.handleClickEdit.bind(this);\n    }\n\n    handleClickEdit(id){\n        this.props.history.push('/note/'+id);\n    }\n\n    render() {\n        return (\n            <div className=\"notesList__wrapper\">\n               {\n                   notesDataSet.map((note) => {\n                        return (\n                            <NotesCard id={note.id}\n                                        title={note.title}\n                                        description={note.description}\n                                        date={note.date}\n                                        onClickEdit={this.handleClickEdit}\n                            />\n                        );\n                   })\n               }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Icon, DatePicker, Button } from 'antd';\n\nconst { TextArea } = Input;\n\nexport default class NewNotes extends Component {\n    static propTypes = {\n        prop: PropTypes\n    }\n\n    render() {\n        return (\n            <div className=\"newNotes__wrapper\">\n                <form>\n                    <div className=\"form__item\">\n                        <Input placeholder=\"Title\" size=\"large\" prefix={<Icon type=\"book\"/>}/>\n                    </div>\n                    <div className=\"form__item\">\n                        <DatePicker size=\"large\" />\n                    </div>\n                    <div className=\"form__item\">\n                        <TextArea rows={8} placeholder=\"Description\"/>\n                    </div>\n                    <div className=\"form__item\">\n                        <Button type=\"primary\">Add</Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Icon, DatePicker } from 'antd';\nimport moment from 'moment';\n\nimport notesDataSet from '../dataSet/notes';\n\nconst { TextArea } = Input;\n\nexport default class EditNote extends Component {\n    static propTypes = {\n        prop: PropTypes\n    }\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            note: {}\n        }\n\n    }\n\n    componentDidMount(){\n        console.log(this.props);\n        const id =  this.props.match.params.uid;\n        const noteOject = notesDataSet.find((note) => (note.id === id));\n        \n        this.setState({note: noteOject});\n    }\n\n    render() {\n        const { note } = this.state;\n\n        return (\n            <div className=\"newNotes__wrapper\">\n                <form>\n                    <div className=\"form__item\">\n                        <Input disabled value={note.title} size=\"large\" prefix={<Icon type=\"book\"/>}/>\n                    </div>\n                    <div className=\"form__item\">\n                        <DatePicker size=\"large\" disabled value={(note.date)? moment(note.date, 'YYYY-MM-DD') : moment()}/>\n                    </div>\n                    <div className=\"form__item\">\n                        <TextArea rows={8} value={note.description} disabled/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport fire from '../boot/firebase';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types'\n\nexport default class Login extends Component {\n    static propTypes = {\n        history: PropTypes.object.isRequired,\n    }\n\n    constructor(props){\n        super(props);\n\n        this.handleClickLogin = this.handleClickLogin.bind(this);\n\n    }\n\n    handleClickLogin(){\n        fire.auth.signInWithPopup(fire.provider) \n        .then((result) => {\n            const data = {\n                user: result.user\n            };\n\n            window.localStorage.setItem('labNotes', JSON.stringify(data));\n            this.props.history.push('/notes');\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"login__wrapper\">\n                <Button type=\"primary\" icon=\"google\" onClick={this.handleClickLogin}>\n                    Google login\n                </Button>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction isLogin(){\n\n    const dataLocalStorage = JSON.parse(window.localStorage.getItem('labNotes'));\n    \n    return dataLocalStorage && Object.keys(dataLocalStorage).length;\n};\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n            : <Redirect to=\"/\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Nav from './components/Nav';\nimport NotesList from './views/NotesList';\nimport NewNotes from './views/NewNotes';\nimport EditNote from './views/EditNote';\nimport Login from './views/Login';\nimport PrivateRouter from './components/PrivateRouter';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav/>\n      </div>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Login}/>\n          <PrivateRouter path=\"/newNote\" component={NewNotes} />\n          <PrivateRouter exact path=\"/notes\" component={NotesList}/>\n          <PrivateRouter path=\"/note/:uid\" component={EditNote}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}